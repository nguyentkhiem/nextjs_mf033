stages:
  - pre
  - build
  - deploy

variables:
  TAG_COMMIT: $CI_REGISTRY/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

build-dev:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo $CI_DEPLOY_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --build-arg MODE=development -t $TAG_COMMIT -f Dockerfile .
    - docker push "$TAG_COMMIT"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

build-prod:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo $CI_DEPLOY_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --build-arg MODE=production -t $TAG_COMMIT -f Dockerfile .
    - docker push "$TAG_COMMIT"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-dev:
  stage: deploy
  image: alpine:latest
  only:
    - develop
  environment:
    name: development
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
  script:
    - >
      ssh $SSH_SERVER_USER@$SSH_SERVER_IP "
      docker login -u "$CI_REGISTRY_USER" -p "$CI_DEPLOY_TOKEN" "$CI_REGISTRY";
      docker pull "$TAG_COMMIT";
      IMAGE_TAG="$CI_COMMIT_SHORT_SHA" docker compose -f "$PATH_TO_PROJECT/docker-compose.yml" up -d;
      docker system prune -f;
      "

deploy-production:
  stage: deploy
  image: alpine:latest
  only:
    - main
  environment:
    name: production
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts && chmod 644 ~/.ssh/known_hosts
  script:
    - >
      ssh $SSH_SERVER_USER@$SSH_SERVER_IP "
      echo $CI_DEPLOY_TOKEN | sudo docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY;
      sudo docker pull "$TAG_COMMIT";
      sudo IMAGE_TAG="$CI_COMMIT_SHORT_SHA" docker compose -f "$PATH_TO_PROJECT/docker-compose.yml" up -d;
      sudo docker system prune -f;
      "